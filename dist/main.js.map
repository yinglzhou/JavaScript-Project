{"version":3,"file":"main.js","mappings":"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","sources":["webpack://wizard-world/./src/scripts/inputs.js","webpack://wizard-world/./src/scripts/bullet.js","webpack://wizard-world/./src/scripts/player.js","webpack://wizard-world/./src/scripts/enemy.js","webpack://wizard-world/./src/index.js"],"sourcesContent":["// //all my event listeners for key presses (player movement)\nexport const keyR = document.addEventListener(\"keydown\", (e) => {\n    if (e.key === \"ArrowRight\") {\n        // debugger\n        a.currentSprite = a.rightSprite;\n        a.velX = 3;\n        // this.currentSprite = this.rightSprite;\n        // console.log(e.key)\n    }\n})\n\nexport const keyL = document.addEventListener(\"keydown\", (e) => {\n    if (e.key === \"ArrowLeft\") {\n        // debugger\n        a.currentSprite = a.leftSprite;\n        a.velX = -3;\n        // console.log(e.key)\n    }\n})\n\nexport const keyRU = document.addEventListener(\"keyup\", (e) => {\n    if (e.key === \"ArrowRight\") {\n        a.currentSprite = a.rightSprite;\n        a.velX = 0;\n        // console.log(e.key)\n    }\n})\n\nexport const keyLU = document.addEventListener(\"keyup\", (e) => {\n    if (e.key === \"ArrowLeft\") {\n        a.currentSprite = a.leftSprite;\n        a.velX = 0;\n        // console.log(e.key)\n    }\n})\n\nexport const keyU = document.addEventListener(\"keydown\", (e) => {\n    if (e.key === \"ArrowUp\") {\n        // a.currentSprite = a.rightSprite;\n        a.velY = -3;\n        // console.log(e.key)\n    }\n})\n\nexport const keyD = document.addEventListener(\"keydown\", (e) => {\n    if (e.key === \"ArrowDown\") {\n        // a.currentSprite = a.rightSprite;\n        a.velY = 3;\n        // console.log(e.key)\n    }\n})\n\nexport const keyUU = document.addEventListener(\"keyup\", (e) => {\n    if (e.key === \"ArrowUp\") {\n        // a.currentSprite = a.rightSprite;\n        a.velY = 0;\n        // console.log(e.key)\n    }\n})\n\nexport const keyDU = document.addEventListener(\"keyup\", (e) => {\n    if (e.key === \"ArrowDown\") {\n        a.velY = 0;\n        // console.log(e.key)\n    }\n})\n\n\n\n\n\n\n//for alphabet e.key === \"d\"\n// e.code === \"KeyD\"\nexport const rightShoot = document.addEventListener(\"keydown\", (e) => {\n    if (e.code === \"KeyD\") {\n        a.keyPressed = true;\n        // debugger \n        a.shoot(e.code);\n        // a.printbullets();\n        // console.log(a.keyPressed)\n        // console.log(e.key)\n    }\n})\nexport const notRightShoot = document.addEventListener(\"keyup\", (e) => {\n    if (e.code === \"KeyD\") {\n        // debugger\n\n        a.keyPressed = false;\n        // debugger\n        // console.log(a.keyPressed)\n        // console.log(e.key)\n    }\n})\n\nexport const leftShoot = document.addEventListener(\"keydown\", (e) => {\n    if (e.code === \"KeyA\") {\n        a.keyPressed = true;\n        // debugger \n        a.shoot(e.code);\n        // a.printbullets();\n        // console.log(a.keyPressed)\n        // console.log(e.key)\n    }\n})\nexport const notLeftShoot = document.addEventListener(\"keyup\", (e) => {\n    if (e.code === \"KeyA\") {\n        // debugger\n\n        a.keyPressed = false;\n        // console.log(a.keyPressed)\n        // console.log(e.key)\n    }\n})\n\nexport const upShoot = document.addEventListener(\"keydown\", (e) => {\n    if (e.code === \"KeyW\") {\n        a.keyPressed = true;\n        // debugger \n        a.shoot(e.code);\n        // a.printbullets();\n        // console.log(a.keyPressed)\n        // console.log(e.key)\n    }\n})\nexport const notUpShoot = document.addEventListener(\"keyup\", (e) => {\n    if (e.code === \"KeyW\") {\n        // debugger\n\n        a.keyPressed = false;\n        // console.log(a.keyPressed)\n        // console.log(e.key)\n    }\n})\n\nexport const downShoot = document.addEventListener(\"keydown\", (e) => {\n    if (e.code === \"KeyS\") {\n        a.keyPressed = true;\n        // debugger \n        a.shoot(e.code);\n        // a.printbullets();\n        // console.log(a.keyPressed)\n        // console.log(e.key)\n    }\n})\nexport const notDownShoot = document.addEventListener(\"keyup\", (e) => {\n    if (e.code === \"KeyS\") {\n        // debugger\n\n        a.keyPressed = false;\n        // console.log(a.keyPressed)\n        // console.log(e.key)\n    }\n})","\nclass Bullet {\n    //radius of bullet is 7\n    constructor(posx, posy, dx, dy) {\n        this.speed = 0.01;\n        this.posx = posx;\n        this.posy = posy;\n        this.dx = dx;\n        this.dy = dy;\n        this.width = 10;\n        this.height = 10;\n    }\n\n\n    update (bulletArr) {\n        this.posx += this.dx;\n        this.posy += this.dy;\n        //if bullet is offscreen then remove it\n        if (this.posx < 0 || this.posy < 0 || this.posx > 750 || this.posy > 500) {\n            let i = bulletArr.indexOf(this)\n            if (i > -1) { //exists\n                bulletArr.splice(i, 1);\n            }\n        }\n    }\n\n    draw(ctx) {\n        // debugger\n        this.posx += this.speed;\n        ctx.fillStyle = \"orange\";\n\n\n        ctx.beginPath();\n        ctx.arc(this.posx, this.posy, 7, 0, Math.PI * 2, false); //radius is 5\n        ctx.fillStyle = \"orange\"\n        ctx.fill()\n        ctx.strokeStyle = \"red\"\n        ctx.stroke();\n    }\n\n}\n\nexport default Bullet;\n\n","import * as dir from \"./inputs\"\nimport Bullet from \"./bullet\"\n//canvas width = 750\n//canvas height = 500\nclass Player {\n    //width = 32\n    //height = 48\n    constructor(options) {\n        //sprite sheets\n        this.rightSprite = new Image();\n        this.rightSprite.src = \"./assets/scaledright.png\";\n\n        this.leftSprite = new Image();\n        this.leftSprite.src = \"./assets/scaledleft.png\";\n\n        this.currentSprite = this.rightSprite;\n\n        //positions\n        this.name = options[\"name\"];\n        this.posX = options[\"pos\"][0];\n        this.posY = options[\"pos\"][1];\n\n        this.velX = 0;\n        this.velY = 0;\n        this.draw();\n\n        //frame counts\n        this.currentFrame = 0;\n        this.frameCount = 0;\n        this.delayFrame = 20;\n\n        //bullets\n        this.bullets = [];\n        this.keyPressed = 0;\n\n\n        //lives\n        this.lives = 3;\n        this.score = 0;\n    }\n    \n    shoot(key) {\n        // debugger\n        let dx;\n        let dy;\n        const bullX = this.posX + 16;\n        const bullY = this.posY + 24;\n        if (this.keyPressed === true) {\n            if (key === \"KeyD\") {\n                let dx = 5;\n                let dy = 0;\n                const bullet = new Bullet(bullX, bullY, dx, dy);\n                this.bullets.push(bullet);\n            }\n            if (key === \"KeyA\") {\n                let dx = -5;\n                let dy = 0;\n                const bullet = new Bullet(bullX, bullY, dx, dy);\n                this.bullets.push(bullet);\n            }\n            if (key === \"KeyW\") {\n                let dx = 0;\n                let dy = -5;\n                const bullet = new Bullet(bullX, bullY, dx, dy);\n                this.bullets.push(bullet);\n            }\n            if (key === \"KeyS\") {\n                let dx = 0;\n                let dy = 5;\n                const bullet = new Bullet(bullX, bullY, dx, dy);\n                this.bullets.push(bullet);\n            }\n        }\n\n    }\n\n    update () {\n        // debugger\n        this.bullets.forEach((el) => {\n            el.update(this.bullets)\n        })\n        for (let i = 0; i < this.bullets.length; i++) {\n            const bullet = this.bullets[i];\n            bullet.draw(ctx);\n        }\n    }\n\n    printbullets () {\n        // debugger\n\n        for (let i = 0; i < this.bullets.length; i++) {\n            const bullet = this.bullets[i];\n            bullet.draw(ctx);\n        }\n\n    }\n\n    draw() {\n        ctx.clearRect(0, 0, 750, 500);\n        // debugger\n\n        ctx.drawImage(\n            this.currentSprite,\n            this.currentFrame * 32, //0\n            0,\n            32,\n            48,\n            this.posX,\n            this.posY,\n            32, //half the spritesheet\n            48 \n          )\n        //   debugger\n        \n\n        this.frameCount++;\n        if (this.frameCount >= this.delayFrame) {\n            this.frameCount = 0;\n            this.currentFrame = (this.currentFrame + 1) % 2;\n        }\n    }\n    \n\n\n\n\n\n\n\n\n    move(e) {\n        this.posX += this.velX;\n        this.posY += this.velY;\n\n        if (this.posX < 0) {\n            this.posX = 0;\n            this.velX = 0;\n        }\n        if (this.posX > 750 - 32) {\n            this.posX = 750 - 32;\n            this.velX = 0;\n        }\n        if (this.posY < 0) {\n            this.posY = 0;\n            this.velY = 0;\n        }\n        if (this.posY > 500 - 48) {\n            this.posY = 500 - 48;\n            this.velY = 0;\n        }\n\n    }\n\n}\n\n\nexport default Player;\n\n\n\n\n\n\n\n\n\n\n\n//my red circle \n    // ctx.beginPath();\n    // ctx.arc(this.posX, this.posY, 10, 0, Math.PI * 2, false);\n    // ctx.strokeStyle = \"black\";\n    // ctx.fillStyle = \"red\"\n    // ctx.fill()\n    // ctx.stroke();","class Enemy {\n    //width = 30.75\n    //height = 48\n    constructor (posx, posy) {\n        this.posx = posx;\n        this.posy = posy;\n        this.player = a;\n        // debugger\n        // this.playerposx = a.posx;\n        // this.playerposy = a.posy;\n        this.rightEnemy = new Image();\n        this.rightEnemy.src = \"./assets/scaledrightenemy.png\"\n\n        this.leftEnemy = new Image();\n        this.leftEnemy.src = \"./assets/scaledleftenemy.png\" //width of each frame is 30.75\n        \n\n        this.currentEnemy = this.leftEnemy;\n        //frame things\n        this.currentFrame = 0;\n        this.frameCount = 0;\n        this.delayFrame = 20;\n    }\n    \n    draw(ctx) {\n        // ctx.fillRect(this.posx, this.posy, 32, 48)\n        // ctx.strokeStyle = \"black\";\n        // ctx.fillStyle = \"red\"\n\n        ctx.drawImage(\n            this.currentEnemy,\n            this.currentFrame * 30.75,\n            0,\n            30.75,\n            48,\n            this.posx,\n            this.posy,\n            30.75,\n            48\n        )\n\n        this.frameCount++;\n        if (this.frameCount >= this.delayFrame) {\n            this.frameCount = 0;\n            this.currentFrame = (this.currentFrame + 1) % 4;\n        }\n    }\n\n    moveToPlayer (speed) {\n        // debugger\n        if (!speed) {speed = 1};\n        const dx = this.player.posX - this.posx; //+16\n        const dy = this.player.posY - this.posy; //+24\n        const distance = Math.sqrt((dx * dx) + (dy * dy))\n        let vx = 0;\n        let vy = 0;\n    // debugger\n        if (distance > 0) {\n            vx = (dx/distance) * speed\n            vy = (dy/distance) * speed  //optional multiply by speed\n        }\n        if (vx > 0) {\n            this.currentEnemy = this.rightEnemy;\n        }\n        if (vx < 0) {\n            this.currentEnemy = this.leftEnemy;\n        }\n\n        this.posx += vx;\n        this.posy += vy;\n    }\n\n\n\n}\n\n\nexport default Enemy;","//entry file - what webpack is looking at\nimport * as dir from \"./scripts/inputs\";\nimport Player from \"./scripts/player\";\nimport Bullet from \"./scripts/bullet\";\nimport Enemy from \"./scripts/enemy\";\n\nlet gameLoopInterval;\nlet updateEnemyInterval;\nlet createEnemyInterval;\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const canvas = document.getElementById(\"game-screen\");\n    const ctx = canvas.getContext(\"2d\");\n    window.ctx = ctx;\n\n\n    window.Player = Player;\n    // debugger\n\n    //options {name: \"me\", pos: [375, 250]}\n    const a = new Player({name: \"me\", pos: [375, 250]})\n    window.a = a;\n\n    const enemies = [];\n    window.enemies = enemies;\n\n    function createEnemy() {\n        let randWidth = Math.floor(Math.random() * 751);\n        let randLength = Math.floor(Math.random() * 501);\n        // debugger\n        if (randWidth > 180 && randWidth < 570 || randLength > 125 && randLength < 375) {\n            randWidth = Math.floor(Math.random() * 751);\n            randLength = Math.floor(Math.random() * 501);\n        }\n\n        // console.log(randWidth, randLength)\n        const enemy = new Enemy(randWidth, randLength);\n        enemies.push(enemy);\n        // console.log(\"enemy spawned\")\n    }\n    \n    let redheart = new Image();\n    redheart.src = \"./assets/1redheart.png\"\n    \n    let emptyheart = new Image ();\n    emptyheart.src = \"./assets/1emptyheart.png\"\n    \n    function heart() {\n        if (a.lives === 3) {\n            ctx.drawImage(redheart, 0, 0, 32, 32, 620, 15, 32, 32)\n            ctx.drawImage(redheart, 0, 0, 32, 32, 585, 15, 32, 32)\n            ctx.drawImage(redheart, 0, 0, 32, 32, 550, 15, 32, 32)\n        }\n        if (a.lives === 2) {\n            ctx.drawImage(emptyheart, 0, 0, 32, 32, 620, 15, 32, 32)\n            ctx.drawImage(redheart, 0, 0, 32, 32, 585, 15, 32, 32)\n            ctx.drawImage(redheart, 0, 0, 32, 32, 550, 15, 32, 32)\n        }\n        if (a.lives === 1) {\n            ctx.drawImage(emptyheart, 0, 0, 32, 32, 620, 15, 32, 32)\n            ctx.drawImage(emptyheart, 0, 0, 32, 32, 585, 15, 32, 32)\n            ctx.drawImage(redheart, 0, 0, 32, 32, 550, 15, 32, 32)\n        }\n        if (a.lives === 0) {\n            ctx.drawImage(emptyheart, 0, 0, 32, 32, 620, 15, 32, 32)\n            ctx.drawImage(emptyheart, 0, 0, 32, 32, 585, 15, 32, 32)\n            ctx.drawImage(emptyheart, 0, 0, 32, 32, 550, 15, 32, 32)\n        }\n    }\n    // debugger\n    let timer = 90;\n    function gameLoop() {\n        a.draw();\n        heart();\n        enemies.forEach((enemy) => {enemy.draw(ctx)})\n        a.move();\n        a.update();\n        timer -= 1/75;\n        timerPrint();\n        printScore();\n        if (a.lives <= 0 || timer <= 0) {\n            clearInterval(gameLoopInterval);\n            clearInterval(updateEnemyInterval);\n            clearInterval(createEnemyInterval);\n            gameOver();\n        }\n        // debugger\n        \n    }\n    \n    function timerPrint() {\n        const min = Math.floor(timer/60);\n        let sec = Math.floor(timer % 60);\n        if (sec < 10) {\n            sec = \"0\" + sec\n        }\n        ctx.font = \"bold 40px rainyheart\";\n        ctx.fillStyle = \"white\"\n        \n        if (timer >= 0) {\n            ctx.fillText(`${min}:${sec}`, 670, 40);\n        }\n    }\n    \n    \n    function printScore() {\n        const score = document.getElementById(\"scoreboard\");\n        score.innerHTML = `\n        <p>\n        Score: <br>\n        <div>\n        ${a.score}\n        </div>\n        </p>\n        `\n    }\n    \n    function updateEnemy() {\n        // debugger\n        if (a.score >= 5) {\n            enemies.forEach((enemy) => {enemy.moveToPlayer(1.1)})\n        }\n        \n        if (a.score >= 15) {\n            enemies.forEach((enemy) => {enemy.moveToPlayer(1.15)})\n        }\n        \n        enemies.forEach((enemy) => {enemy.moveToPlayer()})\n    }\n    \n    \n    function gameOver() {\n        const modal = document.createElement(\"div\");\n        modal.id = \"game-over-modal\";\n        \n        modal.innerHTML = `<div class='content'>\n        <h2>Game Over</h2>\n        <h4 onclick='location.reload()'>Play Again!</div>\n        </div>`;\n        document.body.appendChild(modal);\n    }\n    \n    \n    //bullets and enemies\n    function collisionCheck () {\n        //looping through bullets\n        for (let b = 0; b < a.bullets.length; b++) {\n            let bullet = a.bullets[b];\n            // debugger\n            for (let e = 0; e < enemies.length; e++) {\n                let enemy = enemies[e];\n                \n                const dx = bullet.posx - enemy.posx - 16;\n                const dy = bullet.posy - enemy.posy - 24;\n                const distance = Math.sqrt((dx * dx) + (dy * dy));\n                \n                \n                //radius + half of enemy width  \n                if (distance < 7 + 30.75/2) {\n                    \n                    // console.log(`bulletx: ${[bullet.posx]}`);\n                    // console.log(`enemyx: ${[enemy.posx]}`);\n                    // console.log(`bullety: ${[bullet.posy]}`);\n                    // console.log(`enemyy: ${[enemy.posy]}`);\n                    \n                    \n                    a.bullets.splice(b, 1);\n                    enemies.splice(e, 1);\n                    a.score++;\n                    // console.log(a.score);\n                    break;\n                }\n            }\n        }\n    }\n    \n    function touchingEnemy () {\n        // debugger\n        let player = a;\n        for (let e = 0; e < enemies.length; e++) {\n            let enemy = enemies[e];\n            \n            const dx = enemy.posx - player.posX;\n            const dy = enemy.posy - player.posY;\n            const distance = Math.sqrt((dx * dx) + (dy * dy));\n            \n            \n            if (distance < 32) {\n                player.lives--;\n                enemies.splice(e, 1);\n                // console.log(\"lost a life bud\")\n                // console.log(player.lives)\n                break;\n            }\n        }\n    }\n    \n    let startbutton = document.querySelector(\"#startbutton\")\n    let modal = document.querySelector(\".modal\")\n    \n    startbutton.addEventListener(\"click\", () => {\n        modal.style.display = \"none\";\n        createEnemyInterval = setInterval(createEnemy, 2000)\n        gameLoopInterval = setInterval(gameLoop, 1000/75)\n        updateEnemyInterval = setInterval(updateEnemy, 1000/75)\n        setInterval(collisionCheck, 1000/75);\n        setInterval(touchingEnemy, 1000/75);\n    })\n});"],"names":["document","addEventListener","e","key","a","currentSprite","rightSprite","velX","leftSprite","velY","code","keyPressed","shoot","constructor","posx","posy","dx","dy","this","speed","width","height","update","bulletArr","i","indexOf","splice","draw","ctx","fillStyle","beginPath","arc","Math","PI","fill","strokeStyle","stroke","options","Image","src","name","posX","posY","currentFrame","frameCount","delayFrame","bullets","lives","score","bullX","bullY","bullet","Bullet","push","forEach","el","length","printbullets","clearRect","drawImage","move","player","rightEnemy","leftEnemy","currentEnemy","moveToPlayer","distance","sqrt","vx","vy","gameLoopInterval","updateEnemyInterval","createEnemyInterval","getElementById","getContext","window","Player","pos","enemies","createEnemy","randWidth","floor","random","randLength","enemy","Enemy","redheart","emptyheart","timer","gameLoop","min","sec","font","fillText","timerPrint","innerHTML","clearInterval","modal","createElement","id","body","appendChild","gameOver","updateEnemy","collisionCheck","b","touchingEnemy","startbutton","querySelector","style","display","setInterval"],"sourceRoot":""}